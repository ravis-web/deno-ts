{"version":3,"sources":["components/Todos.js","App.js","index.js"],"names":["Todos","useState","todos","setTodos","editedTodo","setEditedTodo","enteredText","setEnteredText","getTodos","useCallback","a","fetch","response","json","todosData","console","log","useEffect","info","startEditHandler","todo","deleteTodoHandler","todoId","method","data","submitHandler","event","preventDefault","url","id","body","JSON","stringify","headers","Fragment","className","onSubmit","type","value","onChange","target","length","map","key","onClick","bind","App","ReactDOM","render","document","getElementById"],"mappings":"sOAsGeA,G,MAlGD,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAEkBF,qBAFlB,mBAEXG,EAFW,KAECC,EAFD,OAGoBJ,mBAAS,IAH7B,mBAGXK,EAHW,KAGEC,EAHF,KAKZC,EAAWC,sBAAW,sBAAC,8BAAAC,EAAA,+EAEFC,MAAM,0BAFJ,cAEnBC,EAFmB,gBAGDA,EAASC,OAHR,OAGnBC,EAHmB,OAIzBX,EAASW,EAAUZ,OAJM,kDAOzBa,QAAQC,IAAR,MAPyB,0DAS1B,IAEHC,qBAAU,WACRT,MACC,CAACA,IAEJS,qBAAU,WACJb,GACFG,EAAeH,EAAWc,QAE3B,CAACd,IAEJ,IAAMe,EAAmB,SAACC,GACxBf,EAAce,IAGVC,EAAiB,uCAAG,WAAOC,GAAP,iBAAAZ,EAAA,sEACDC,MAAM,8BAAgCW,EAAQ,CACnEC,OAAQ,WAFc,cAClBX,EADkB,gBAILA,EAASC,OAJJ,OAIlBW,EAJkB,OAMxBT,QAAQC,IAAIQ,GACZhB,IAPwB,2CAAH,sDAcjBiB,EAAa,uCAAG,WAAOC,GAAP,qBAAAhB,EAAA,6DACpBgB,EAAMC,iBACNtB,EAAc,MACdE,EAAe,IACXqB,EAAM,6BACNL,EAAS,OACTnB,IACFwB,EAAMA,EAAM,IAAMxB,EAAWyB,GAC7BN,EAAS,OARS,SAUGZ,MAAMiB,EAAK,CAChCL,SACAO,KAAMC,KAAKC,UAAU,CACnBd,KAAMZ,IAER2B,QAAS,CACP,eAAgB,sBAhBA,cAUdrB,EAVc,iBAmBDA,EAASC,OAnBR,QAmBdW,EAnBc,OAoBpBT,QAAQC,IAAIQ,GACZhB,IArBoB,4CAAH,sDAwBnB,OACE,kBAAC,IAAM0B,SAAP,KACE,yBAAKC,UAAU,eACb,0BAAMC,SAAUX,GACd,4CACA,2BAAOY,KAAK,OAAOC,MAAOhC,EAAaiC,SAjC1B,SAACb,GACpBnB,EAAemB,EAAMc,OAAOF,UAiCtB,4BAAQD,KAAK,UAAUjC,EAAa,OAAS,MAA7C,WAGHF,GAASA,EAAMuC,OAAS,GACvB,wBAAIN,UAAU,eACXjC,EAAMwC,KAAI,SAACtB,GAAD,OACT,wBAAIuB,IAAKvB,EAAKS,IACZ,8BAAOT,EAAKF,MACZ,yBAAKiB,UAAU,iBACb,4BAAQS,QAASzB,EAAiB0B,KAAK,KAAMzB,IAA7C,QAGA,4BAAQwB,QAASvB,EAAkBwB,KAAK,KAAMzB,EAAKS,KAAnD,mBClFDiB,MAJf,WACE,OAAO,kBAAC,EAAD,O,MCCTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ff870f78.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport './Todos.css';\n\nconst Todos = () => {\n  const [todos, setTodos] = useState([]);\n  const [editedTodo, setEditedTodo] = useState();\n  const [enteredText, setEnteredText] = useState('');\n\n  const getTodos = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:5000/');\n      const todosData = await response.json();\n      setTodos(todosData.todos);\n    } catch (err) {\n      // Error handling would be implemented here\n      console.log(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    getTodos();\n  }, [getTodos]);\n\n  useEffect(() => {\n    if (editedTodo) {\n      setEnteredText(editedTodo.info);\n    }\n  }, [editedTodo]);\n\n  const startEditHandler = (todo) => {\n    setEditedTodo(todo);\n  };\n\n  const deleteTodoHandler = async (todoId) => {\n    const response = await fetch('http://localhost:5000/todo/' + todoId, {\n      method: 'DELETE',\n    });\n    const data = await response.json();\n\n    console.log(data);\n    getTodos();\n  };\n\n  const inputHandler = (event) => {\n    setEnteredText(event.target.value);\n  };\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    setEditedTodo(null);\n    setEnteredText('');\n    let url = 'http://localhost:5000/todo';\n    let method = 'POST';\n    if (editedTodo) {\n      url = url + '/' + editedTodo.id;\n      method = 'PUT';\n    }\n    const response = await fetch(url, {\n      method,\n      body: JSON.stringify({\n        info: enteredText,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await response.json();\n    console.log(data);\n    getTodos();\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"todos__form\">\n        <form onSubmit={submitHandler}>\n          <label>Todo Text</label>\n          <input type=\"text\" value={enteredText} onChange={inputHandler} />\n          <button type=\"submit\">{editedTodo ? 'Edit' : 'Add'} Todo</button>\n        </form>\n      </div>\n      {todos && todos.length > 0 && (\n        <ul className=\"todos__list\">\n          {todos.map((todo) => (\n            <li key={todo.id}>\n              <span>{todo.info}</span>\n              <div className=\"todo__actions\">\n                <button onClick={startEditHandler.bind(null, todo)}>\n                  Edit\n                </button>\n                <button onClick={deleteTodoHandler.bind(null, todo.id)}>\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Todos;\n","import React from 'react';\n\nimport Todos from './components/Todos';\n\nfunction App() {\n  return <Todos />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}